#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND and succeed if the exit status is one of the passed N, M, ...
numbers (with !|not|otherThan: not one of those). Else, fail with the original
exit status (0, if not included, is translated to 125 to differentiate it from
success).
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '-c|--command "COMMANDLINE" [!|not|otherThan] N [M ...] [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
    printf 'Usage: echo COMMANDLINES | %q %s\n' "$(basename "$1")" '[!|not|otherThan] N [M ...] [-?|-h|--help]'
    printf 'Usage: %q %s <<EOF\n  COMMANDLINE\n...\nEOF\n' "$(basename "$1")" '[!|not|otherThan] N [M ...]'
}

isNegate=
typeset -A allowedStati=()

case "$1" in
    \!|not|otherThan)	shift; isNegate=t;;
esac
while [[ "$1" =~ ^[0-9]+$ ]]
do
    allowedStati["$1"]=t
    shift
done

isNeedEval=
typeset -a commands=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--command|-c)	shift; commands+=(${commands:+;} "$1"); isNeedEval=t; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ ${#allowedStati[@]} -eq 0 ]; then
    echo >&2 'ERROR: No allowed exit status passed!'
    printUsage "$0" >&2
    exit 2
fi
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	printf -v quotedSimpleCommand '%q ' "$@"
	commands+=(${commands:+;} "${quotedSimpleCommand% }")
    else
	commands=("$@")
    fi
fi
if [ ${#commands[@]} -eq 0 ]; then
    bash -
elif [ "$isNeedEval" ]; then
    eval "${commands[@]}"
else
    "${commands[@]}"
fi
status=$?

if  ( [ -z "$isNegate" ] && [ "${allowedStati["$status"]}" ] ) ||
    ( [ "$isNegate" ] && [ -z "${allowedStati["$status"]}" ] ); then
    exit 0
elif [ $status -eq 0 ]; then
    exit 125
else
    exit $status
fi
