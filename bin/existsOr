#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Tests whether the passed EXECUTABLE exists in PATH. If not, it asks the user
whether to define it. If confirmed, this will execute the shell COMMANDS read
from stdin.
HELPTEXT
printf 'Usage: echo COMMANDS | %q %s\n' "$(basename "$1")" '[-g|--memoize-group GROUP] [--bare|[--trailing-prompt] [--emulate-prompt] [--worst-status] [-c|--comment COMMENT]] [--] EXECUTABLE [-?|-h|--help]'
printf 'Usage: %q %s <<EOF\n  COMMANDS\nEOF\n' "$(basename "$1")" '[...] EXECUTABLE'
}
isBare=
typeset -a memoizeDecisionArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--bare)		shift; isBare=t;;
	--memoize-group|-g) memoizeDecisionArgs+=("$1" "$2"); shift; shift;;
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--)		memoizeDecisionArgs+=("$1"); break;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

[ "$memoizeDecisionArgs" ] || memoizeDecisionArgs=(--memoize-group "$(basename -- "$0").$PPID")
EXECUTABLE=; [ $# -gt 0 ] && EXECUTABLE=${!#}
typeset -a runWithPromptArgs=("${@:1:$(($#-1))}")

'which' "$EXECUTABLE" >/dev/null 2>&1 && exit 0

memoizeDecision "${memoizeDecisionArgs[@]}" --subject "$EXECUTABLE" --state 'exist' --action 'define it' || exit 2

if [ "$isBare" ]; then
    bash -
else
    runWithPrompt "${runWithPromptArgs[@]}"
fi
