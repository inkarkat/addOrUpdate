#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND and make it last at least NUMBER[SUFFIX], sleeping some more if
necessary.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" 'NUMBER[SUFFIX] [-b|--before NUMBER[SUFFIX]] -c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
    printf 'Usage: echo COMMANDLINES | %q %s\n' "$(basename "$1")" 'NUMBER[SUFFIX] [-b|--before NUMBER[SUFFIX]] [--bare|[--trailing-prompt|--no-trailing-prompt] [--emulate-prompt] [--worst-status]] [-?|-h|--help]'
    printf 'Usage: %q %s <<EOF\n  COMMANDLINE\n...\nEOF\n' "$(basename "$1")" '[...]'
}

timeToSeconds()
{
    case "$1" in
	+([0-9])?(s))   time="${1%s}";;
	+([0-9])m)	time=$((${1%m} * 60));;
	+([0-9])h)	time=$((${1%h} * 3600));;
	+([0-9])d)	time=$((${1%d} * 86400));;
	*)		printf >&2 'ERROR: Illegal duration: %s\n' "$1"; exit 2;;
    esac
    printf %s "$time"
}
if [ -z "$1" ]; then
    echo >&2 'ERROR: No duration (NUMBER[SUFFIX]) passed.'
    echo >&2
    printUsage "$0" >&2
    exit 2
fi
duration="$(timeToSeconds "$1")"; shift
before=
isBare=
isNeedEval=
typeset -a commands=()
typeset -a runWithPromptArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--before|-b)	shift; before="$(timeToSeconds "$1")"; shift;;
	--command|-c)	shift; commands+=(${commands:+;} "$1"); isNeedEval=t; shift;;
	--bare)		shift; isBare=t;;
	--no-trailing-prompt|--trailing-prompt|--emulate-prompt|--worst-status)  runWithPromptArgs+=("$1"); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	commands+=(${commands:+;} $(printf '%q ' "$@"))
    else
	commands=("$@")
    fi
fi

SECONDS=0
[ "$before" ] && sleep "$before"
if [ ${#commands[@]} -eq 0 ]; then
    if [ "$isBare" ]; then
	bash -
    else
	runWithPrompt "${runWithPromptArgs[@]}"
    fi
elif [ "$isNeedEval" ]; then
    eval "${commands[@]}"
else
    "${commands[@]}"
fi
status=$?
shortcoming=$((duration - SECONDS))
[ $shortcoming -gt 0 ] && sleep "$shortcoming"
exit $status
