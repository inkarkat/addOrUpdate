#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Tests whether the passed pgrep [OPTIONS] PATTERN is running as (at least one)
process. If not, it asks the user whether to start it. If confirmed, this will
execute the shell COMMANDS read from stdin.
HELPTEXT
printf 'Usage: echo COMMANDS | %q %s\n' "$(basename "$1")" '[-g|--memoize-group GROUP] [--bare] [OPTIONS] [--] PATTERN [-?|-h|--help]'
printf 'Usage: %q %s <<EOF\n  COMMANDS\nEOF\n' "$(basename "$1")" '[...] PATTERN'
}
isBare=
typeset -a memoizeDecisionArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--bare)		shift; isBare=t;;
	--memoize-group|-g) memoizeDecisionArgs+=("$1" "$2"); shift; shift;;
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--)		memoizeDecisionArgs+=("$1"); break;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

[ "$memoizeDecisionArgs" ] || memoizeDecisionArgs=(--memoize-group "$(basename -- "$0").$PPID")

pgrep --count "$@" >/dev/null && exit 0
case $? in
    1)	;; # No processes matched, continue.
    2)	echo >&2 "ERROR: Invalid pgrep OPTIONS"; exit 2;;
    3)	echo >&2 "ERROR: Fatal pgrep error"; exit 3;;
    *)	echo >&2 "ERROR: Unknown pgrep error"; exit 3;;
esac

readonly pattern=${!#}
memoizeDecision "${memoizeDecisionArgs[@]}" --subject "$pattern" --state 'run' --action 'start it' || exit 2

if [ "$isBare" ]; then
    bash -
else
    runWithPrompt --no-trailing-prompt
fi
