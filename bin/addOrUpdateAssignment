#!/bin/bash

typeset -a usageOverrideArgs=(
    -e '/^ *\(--line|-l\|--update-match|-u\|--replacement|-r\)/b removeOptionLoop'
    -e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?addOrUpdateLine /\1\2'"$(basename "$0")"' -l|--lhs ASSIGNEE -r|--rhs VALUE /; s/-l|--line assignment \[-a|--accept-match ACCEPT-PATTERN\] \[-u|--update-match PATTERN\] \[-r|--replacement REPLACEMENT\] // }'
)
printUsage()
{
    addOrUpdateLine --doesNotExist 2>&1 | sed \
	-e '/^ERROR: Unknown option "--doesNotExist"!/{ N; s/\n$//; D; }' \
	"${usageOverrideArgs[@]}" \
	-e "/Try addOrUpdateLine --help for more information./s/addOrUpdateLine/$(basename "$1")/" \
	-e :removeOptionLoop
}
printLongUsage()
{
    addOrUpdateLine --help 2>&1 | sed \
	-e '1s#^.*$#Tries to locate an assignment in the form ASSIGNEE=... in at least one (all with --all) of the passed FILE(s), and updates it so that VALUE gets assigned (in the first file to match, and only the first such matching assignment there), or appends (at the end of the last FILE) if such assignment does not exist yet.#' \
	-e '2b removeFirstParagraphLoop' \
	-e 's/LINE/assignment/g' \
	-e '/^ *--in-place/i\
    --lhs|-l ASSIGNEE	    Locate the first line that has ASSIGNEE=...\
    --rhs|-r VALUE	    Replace the original value after the = with VALUE.' \
	"${usageOverrideArgs[@]}" \
	-e '/^Example:$/N' -e '/\(^\|\n\)Example: */{ s/\(^\|\n\)\(Example: *\)\?addOrUpdateLine .*/\1\2'"$(basename "$1") -l 'export FOO' -r quux .bashrc/ }" \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop }' \
	-e b -e :removeOptionLoop -e '{ /\n *\(--line|-l\|--update-match|-u\|--replacement|-r\)[^\n]*$/{ N; b removeOptionLoop; }; /\n *--[^\n]*$\|\n[^ ]\|\n$/{ s/^\(.*\n\)\?//; b; }; N; b removeOptionLoop }'
}

unset lhs
unset rhs
typeset -a addOrUpdateLineArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--lhs|-l)	shift; lhs="$1"; shift;;
	--rhs|-r)	shift; rhs="$1"; shift;;
	--)		addOrUpdateLineArgs+=("$1"); shift; break;;
	*)		addOrUpdateLineArgs+=("$1"); shift;;
    esac
done
if [ -z "${lhs+t}" -o -z "${rhs+t}" ]; then
    echo 'ERROR: Both -l|--lhs ASSIGNEE and -r|--rhs VALUE must be passed.'
    echo
    printUsage "$0"
    exit 2
elif [ -z "$lhs" ]; then
    echo 'ERROR: ASSIGNEE cannot be empty.'
    echo
    printUsage "$0"
    exit 2
fi >&2

literalLhs="$(printf %s "$lhs" | sed -e 's/[][\$*.^]/\\&/g')"
if [ "$ADDORUPDATELINE_NO_APPEND" ]; then
    literalReplacement="${lhs}=${rhs}"
    literalReplacement="${literalReplacement//\\/\\\\}"
    literalReplacement="${literalReplacement//&/\\&}"
    literalReplacement="${literalReplacement//$'\n'/\\n}"
    exec addOrUpdateLine --update-match "^${literalLhs}=.*" --replacement "$literalReplacement" "${addOrUpdateLineArgs[@]}" "$@"
else
    exec addOrUpdateLine --line "${lhs}=${rhs}" --update-match "^${literalLhs}=" "${addOrUpdateLineArgs[@]}" "$@"
fi
