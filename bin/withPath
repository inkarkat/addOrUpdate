#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Execute COMMAND while ADD-PATH is put at the front of \$PATH. This can be used
to temporarily augment the PATH, or to give later PATH entries a higher
precedence.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" 'ADD-PATH -c|--command "COMMANDLINE" [-c ...] | [--] SIMPLECOMMAND [...] [-?|-h|--help]'
    printf 'Usage: echo COMMANDLINES | %q %s\n' "$(basename "$1")" 'ADD-PATH [--bare|[--trailing-prompt|--no-trailing-prompt] [--emulate-prompt] [--worst-status]] [-?|-h|--help]'
    printf 'Usage: %q %s <<EOF\n  COMMANDLINE\n...\nEOF\n' "$(basename "$1")" 'ADD-PATH [...]'
}

if [ $# -eq 0 ]; then
    echo >&2 'ERROR: No ADD-PATH passed.'
    printUsage "$0" >&2
    exit 2
fi
export PATH="${1}:$PATH"; shift

isBare=
isNeedEval=
typeset -a commands=()
typeset -a runWithPromptArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--command|-c)	shift; commands+=(${commands:+;} "$1"); isNeedEval=t; shift;;
	--bare)		shift; isBare=t;;
	--no-trailing-prompt|--trailing-prompt|--emulate-prompt|--worst-status)  runWithPromptArgs+=("exec "); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	commands+=(${commands:+;} $(printf '%q ' "$@"))
    else
	commands=("$@")
    fi
fi
if [ ${#commands[@]} -eq 0 ]; then
    if [ "$isBare" ]; then
	exec bash -
    else
	exec runWithPrompt "${runWithPromptArgs[@]}"
    fi
elif [ "$isNeedEval" ]; then
    eval "${commands[@]}"
else
    "${commands[@]}"
fi
