#!/bin/bash
# Extracted and generalized from my git-sh
# (https://github.com/inkarkat/git-extensions/blob/master/git-sh); inspired by
#   https://gist.github.com/danielrw7/bb88e3dad565c0d8ee54031f6b758a09

printUsage()
{
    cat <<HELPTEXT
Interactively enter a bunch of subcommands or command options for COMMAND
repeatedly, like in a REPL (Read-Eval-Print Loop).
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" 'COMMAND [...] [-?|-h|--help]'
}

isWrapped=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --wrapped)		shift; isWrapped=t;;
esac
if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
elif [ ! "$isWrapped" ] && type -t rlwrap >/dev/null; then
    readonly scriptFilespec="${BASH_SOURCE[0]}"
    exec rlwrap "$scriptFilespec" --wrapped "$@"
fi

prompt="${*}> "
while read -r -p "$prompt" line; do
    if [ "$line" = exit ]; then
	echo "bye"
	break
    fi
    eval '"$@"' "$line"
done
